% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch.R
\name{fetch_omop}
\alias{fetch_omop}
\title{Fetch OMOP Data}
\usage{
fetch_omop(
  conn,
  conn_fun = "pg13::local_connect(verbose=FALSE)",
  type_from = concept_class_id,
  label_glue = "{vocabulary_id}\\n{concept_class_id}\\n({standard_concept})\\n",
  schema = "omop_vocabulary",
  verbose = FALSE,
  render_sql = FALSE,
  version_key
)
}
\arguments{
\item{conn}{PARAM_DESCRIPTION}

\item{conn_fun}{PARAM_DESCRIPTION, Default: 'pg13::local_connect(verbose=FALSE)'}

\item{type_from}{PARAM_DESCRIPTION, Default: concept_class_id}

\item{schema}{PARAM_DESCRIPTION, Default: 'omop_vocabulary'}

\item{verbose}{PARAM_DESCRIPTION, Default: FALSE}

\item{render_sql}{PARAM_DESCRIPTION, Default: FALSE}

\item{version_key}{A list object that serves as the hash for caching. Set to NULL
to cache under a generic hash.}
}
\value{
OUTPUT_DESCRIPTION
}
\description{
Fetch concept class relationships in a Postgres instance of the OMOP vocabularies.
}
\details{
The OMOP vocabularies are transformed into nodes and edges by first normalizing
OMOP concepts to their associated concept classes. The distinct \code{concept_id} count
is preserved to determine the extent of coverage between concept classes across
relationships.

This function queries excludes invalid concepts and concept relationships as well
as relationships to self.
}
